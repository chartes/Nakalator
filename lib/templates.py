#!/usr/bin/env python3
# -- coding: utf-8 --

"""This file contains the user assets for the project that convert to yaml
"""

credentials_to_yaml = "API_NAKALA_KEY_PROD: \"\" # Remplir avec la cl√© API " \
                      "si vous utilisez l'instance Nakala en production\n" \
                      "API_NAKALA_KEY_TEST: \"\" # Remplir avec la cl√© API " \
                      "si vous utilisez l'instance Nakala en test"

metadata_to_yaml = """# ***************************************************************************
# FICHIER D'EXEMPLE POUR LA CR√âATION DE M√âTADONN√âES                         *
# NE PAS SUPPRIMER CE FICHIER                                               *
# UTILISER CE FICHIER COMME MOD√àLE POUR CR√âER DE NOUVELLES M√âTADONN√âES      *
# ***************************************************************************

name: "BELLELAY" # Nom du projet nakalator (de pr√©f√©rence le pr√©fixe utilis√© pour les images)

# ZONE DONN√âE
data:
  path: "" # Chemin absolu (!) vers le r√©pertoire des donn√©es dans nakalator_workspace/data/ par exemple le dossier contenant l'image ou les images 
  type: "tif" # Format des images (jpeg, tif, png, etc.)
  status: "pending" # "pending" ou "published". Il est conseill√© de laisser "pending" par d√©faut et de changer le status dans Nakala une fois le d√©p√¥t valid√© manuellement.

# ZONE COLLECTION
collectionIds: "" # Utiliser le DOI de la collection pr√©sent dans Nakala si les images sont d√©pos√©es dans une collection existante, sinon laisser vide.
collectionTitle: "Le nom de ma collection √† cr√©er" # A remplir si je souhaite cr√©er une nouvelle collection au moment du d√©p√¥t de ma ou de mes donn√©es, sinon laisser vide.
collectionDescription: "La description de ma collection √† cr√©er" # A remplir si je souhaite cr√©er une nouvelle collection au moment du d√©p√¥t de ma ou de mes donn√©es, sinon laisser vide.
collectionStatus: "private" # "private" ou "public". Il est conseill√© de laisser "private" par d√©faut et de changer le status dans Nakala une fois le versement de la ou des donn√©es r√©alis√©.

# ZONE M√âTADONN√âES DE LA DONN√âE
metadata:
  # M√©tadonn√©es strictement requises (√† compl√©ter manuellement sinon elles seront g√©n√©r√©s automatiquement avec des valeurs par d√©faut):

  http://nakala.fr/terms#title: # Le titre de la donn√©e qui s'affiche dans la page de pr√©sentation de la donn√©e sur Nakala
    value : "Images du graduel de Bellelay" # a modifier
    lang : "fr"
    typeUri: "http://www.w3.org/2001/XMLSchema#string"

  http://purl.org/dc/terms/description: # Description de la donn√©e qui s'affiche dans la page de pr√©sentation de la donn√©e sur Nakala
    value: "Le graduel de Bellelay est l'un des premiers livres liturgiques not√©s de l'ordre des Pr√©montr√©s. Il contient tout le r√©pertoire des messes et des offices pour le cycle liturgique de l'ann√©e, plus quelques ajouts marginaux (compositions musicales, donation)." # a modifier
    lang: "fr"
    typeUri: "http://www.w3.org/2001/XMLSchema#string"


  http://nakala.fr/terms#creator: # Cr√©ateur de la donn√©e (vous pouvez enti√®rement commenter ce champ, par d√©faut la m√©tadonn√©e sera alors "anonyme")
    value:
      givenname: "Toto"
      surname: "Tati"

  http://nakala.fr/terms#created: # Date de cr√©ation de la donn√©e (vous pouvez enti√®rement commenter ce champ, par d√©faut la date du jour sera alors indiqu√©)
    value: "2024-09-02"
    typeUri: "http://www.w3.org/2001/XMLSchema#string"


  http://nakala.fr/terms#license: # Licence de la donn√©e dans Nakala (si vous commenter enti√®rement, la licence 'CC-BY-4.0' sera appliqu√© par d√©faut). Pour les codes licences accept√©s par Nakala voir : https://api.nakala.fr/vocabularies/licenses 
    value: "CC-BY-4.0"
    typeUri: "http://www.w3.org/2001/XMLSchema#string"

  http://nakala.fr/terms#type: # Type de d√©p√¥t Nakala, par d√©faut "c_c513" (image). Pour les formats accept√©s par Nakala voir : https://api.nakala.fr/vocabularies/licenses
    value: "http://purl.org/coar/resource_type/c_c513"
    typeUri: "http://www.w3.org/2001/XMLSchema#anyURI"

  http://purl.org/dc/terms/publisher: # Publication, si comment√© "√âcole nationale des chartes - PSL" par d√©faut
    value: "√âcole nationale des chartes - PSL"
    lang: "fr"
    typeUri: "http://www.w3.org/2001/XMLSchema#string"


  # ... ajouter d'autres m√©tadonn√©es qualifi√©es si n√©cessaire avec d'autres sch√©mas (https://documentation.huma-num.fr/nakala-guide-de-description/), par exemple (a commenter ou d√©commenter):

  http://purl.org/dc/terms/title:
    value: "Un autre titre"
    typeUri: "http://www.w3.org/2001/XMLSchema#string"
  
  http://purl.org/dc/terms/extent:
    value: "0-8"
    lang: "fr"
    typeUri: "http://www.w3.org/2001/XMLSchema#string"
  
  http://purl.org/dc/terms/date:
    value: "1988"
    lang: "fr"
    typeUri: "http://www.w3.org/2001/XMLSchema#string"

  http://purl.org/dc/terms/bibliographicCitation:
    value : "auteur, ¬´ titre ¬ª, in ouvrage etc."
    lang: "fr"
    typeUri: "http://www.w3.org/2001/XMLSchema#string"


  # http://purl.org/dc/terms/creator:
  # http://purl.org/dc/terms/contributor:
  # http://purl.org/dc/terms/language:
  # http://purl.org/dc/terms/relation:
  # http://purl.org/dc/terms/rightsHolder:
  # http://purl.org/dc/terms/spatial:
  # http://purl.org/dc/terms/available:
  # http://purl.org/dc/terms/modified:
  # http://purl.org/dc/terms/rights:
  # http://purl.org/dc/terms/isVersionOf:
  # http://purl.org/dc/terms/format:
  # http://purl.org/dc/terms/abstract:
  # http://purl.org/dc/terms/source:
  # http://purl.org/dc/terms/subject:
  # http://purl.org/dc/terms/medium:
  # ...
"""

workspace_info_init = lambda base_dir_create: f"""
    üìÅ {base_dir_create}
        ‚îú‚îÄ‚îÄ üìÅ data/ : This directory contains the data to be sent to Nakala (images, xml, pdf, audio records etc.)
        ‚îú‚îÄ‚îÄ üìÅ metadatas/ : This directory contains the metadata files in YAML format
        ‚îú           ‚îú‚îÄ‚îÄ üìÑ metadata_example.yml : Example file for creating metadata
        ‚îú‚îÄ‚îÄ üìÅ output/ : This directory contains the output files (reports to check output of the process)
        ‚îú‚îÄ‚îÄ üìÑ credentials.yml : This file contains the Nakala API key for test and production

        Process: 
        1. Go to workspace directory with 'cd ./nakalator_workspace/'
        2. If necessary, add Nakala API key in credentials.test.yml or credentials.prod.yml
        3. Add data to the data/ directory
        4. Create metadata files in the metadatas/ directory (you can use metadata_example.yml as a template)
        5. Send data to Nakala with command 'nakalator main'
    """
